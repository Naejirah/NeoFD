# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InputIA(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, install_windows_chemin_absolu: str=None, install_mac_chemin_absolu: str=None, install_linux_chemin_absolu: str=None, inference_chemin_absolu: str=None, param_chemin_absolu: str=None, venv_chemin_absolu: str=None):  # noqa: E501
        """InputIA - a model defined in Swagger

        :param install_windows_chemin_absolu: The install_windows_chemin_absolu of this InputIA.  # noqa: E501
        :type install_windows_chemin_absolu: str
        :param install_mac_chemin_absolu: The install_mac_chemin_absolu of this InputIA.  # noqa: E501
        :type install_mac_chemin_absolu: str
        :param install_linux_chemin_absolu: The install_linux_chemin_absolu of this InputIA.  # noqa: E501
        :type install_linux_chemin_absolu: str
        :param inference_chemin_absolu: The inference_chemin_absolu of this InputIA.  # noqa: E501
        :type inference_chemin_absolu: str
        :param param_chemin_absolu: The param_chemin_absolu of this InputIA.  # noqa: E501
        :type param_chemin_absolu: str
        :param venv_chemin_absolu: The venv_chemin_absolu of this InputIA.  # noqa: E501
        :type venv_chemin_absolu: str
        """
        self.swagger_types = {
            'install_windows_chemin_absolu': str,
            'install_mac_chemin_absolu': str,
            'install_linux_chemin_absolu': str,
            'inference_chemin_absolu': str,
            'param_chemin_absolu': str,
            'venv_chemin_absolu': str
        }

        self.attribute_map = {
            'install_windows_chemin_absolu': 'install_windows_chemin_absolu',
            'install_mac_chemin_absolu': 'install_mac_chemin_absolu',
            'install_linux_chemin_absolu': 'install_linux_chemin_absolu',
            'inference_chemin_absolu': 'inference_chemin_absolu',
            'param_chemin_absolu': 'param_chemin_absolu',
            'venv_chemin_absolu': 'venv_chemin_absolu'
        }
        self._install_windows_chemin_absolu = install_windows_chemin_absolu
        self._install_mac_chemin_absolu = install_mac_chemin_absolu
        self._install_linux_chemin_absolu = install_linux_chemin_absolu
        self._inference_chemin_absolu = inference_chemin_absolu
        self._param_chemin_absolu = param_chemin_absolu
        self._venv_chemin_absolu = venv_chemin_absolu

    @classmethod
    def from_dict(cls, dikt) -> 'InputIA':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InputIA of this InputIA.  # noqa: E501
        :rtype: InputIA
        """
        return util.deserialize_model(dikt, cls)

    @property
    def install_windows_chemin_absolu(self) -> str:
        """Gets the install_windows_chemin_absolu of this InputIA.


        :return: The install_windows_chemin_absolu of this InputIA.
        :rtype: str
        """
        return self._install_windows_chemin_absolu

    @install_windows_chemin_absolu.setter
    def install_windows_chemin_absolu(self, install_windows_chemin_absolu: str):
        """Sets the install_windows_chemin_absolu of this InputIA.


        :param install_windows_chemin_absolu: The install_windows_chemin_absolu of this InputIA.
        :type install_windows_chemin_absolu: str
        """

        self._install_windows_chemin_absolu = install_windows_chemin_absolu

    @property
    def install_mac_chemin_absolu(self) -> str:
        """Gets the install_mac_chemin_absolu of this InputIA.


        :return: The install_mac_chemin_absolu of this InputIA.
        :rtype: str
        """
        return self._install_mac_chemin_absolu

    @install_mac_chemin_absolu.setter
    def install_mac_chemin_absolu(self, install_mac_chemin_absolu: str):
        """Sets the install_mac_chemin_absolu of this InputIA.


        :param install_mac_chemin_absolu: The install_mac_chemin_absolu of this InputIA.
        :type install_mac_chemin_absolu: str
        """

        self._install_mac_chemin_absolu = install_mac_chemin_absolu

    @property
    def install_linux_chemin_absolu(self) -> str:
        """Gets the install_linux_chemin_absolu of this InputIA.


        :return: The install_linux_chemin_absolu of this InputIA.
        :rtype: str
        """
        return self._install_linux_chemin_absolu

    @install_linux_chemin_absolu.setter
    def install_linux_chemin_absolu(self, install_linux_chemin_absolu: str):
        """Sets the install_linux_chemin_absolu of this InputIA.


        :param install_linux_chemin_absolu: The install_linux_chemin_absolu of this InputIA.
        :type install_linux_chemin_absolu: str
        """

        self._install_linux_chemin_absolu = install_linux_chemin_absolu

    @property
    def inference_chemin_absolu(self) -> str:
        """Gets the inference_chemin_absolu of this InputIA.


        :return: The inference_chemin_absolu of this InputIA.
        :rtype: str
        """
        return self._inference_chemin_absolu

    @inference_chemin_absolu.setter
    def inference_chemin_absolu(self, inference_chemin_absolu: str):
        """Sets the inference_chemin_absolu of this InputIA.


        :param inference_chemin_absolu: The inference_chemin_absolu of this InputIA.
        :type inference_chemin_absolu: str
        """

        self._inference_chemin_absolu = inference_chemin_absolu

    @property
    def param_chemin_absolu(self) -> str:
        """Gets the param_chemin_absolu of this InputIA.


        :return: The param_chemin_absolu of this InputIA.
        :rtype: str
        """
        return self._param_chemin_absolu

    @param_chemin_absolu.setter
    def param_chemin_absolu(self, param_chemin_absolu: str):
        """Sets the param_chemin_absolu of this InputIA.


        :param param_chemin_absolu: The param_chemin_absolu of this InputIA.
        :type param_chemin_absolu: str
        """

        self._param_chemin_absolu = param_chemin_absolu

    @property
    def venv_chemin_absolu(self) -> str:
        """Gets the venv_chemin_absolu of this InputIA.


        :return: The venv_chemin_absolu of this InputIA.
        :rtype: str
        """
        return self._venv_chemin_absolu

    @venv_chemin_absolu.setter
    def venv_chemin_absolu(self, venv_chemin_absolu: str):
        """Sets the venv_chemin_absolu of this InputIA.


        :param venv_chemin_absolu: The venv_chemin_absolu of this InputIA.
        :type venv_chemin_absolu: str
        """

        self._venv_chemin_absolu = venv_chemin_absolu
