openapi: 3.0.3
info:
  title: NeoFD
  description: |-
    API pour utiliser les IA dans le cadre du projet NeoFD
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.1"
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://neoFD/api/v
tags:
  - name: IA
    description: Paramétrage des IA
    externalDocs:
      description: Find out more
      url: http://swagger.io
      
  - name: Categorie
    description: Catégories des IA
    externalDocs:
      description: Find out more
      url: http://swagger.io #get post Delete
  
  - name: Modèle
    description: Paramétrage des modèles d'IA #par IA
    externalDocs:
      description: Find out more
      url: http://swagger.io
  
  - name: Installation
    description: Lancement d'une génération par une IA par IA
    externalDocs:
      description: Find out more
      url: http://swagger.io
      
  - name: Génération
    description: Lancement d'une génération par une IA # par besoin
    externalDocs:
      description: Find out more
      url: http://swagger.io
  
  - name: Résultat
    description: Lancement d'une génération par une IA # par IA
    externalDocs:
      description: Find out more
      url: http://swagger.io 
paths:
  /ia:
    post:
      tags:
        - IA
      summary: Ajoute une nouvelle IA
      description: Add a new pet to the store
      operationId: addPet
      parameters:
        - name: nomIA
          in: query
          description: Nom de l'IA
          required: true
          schema:
            type: string 
        - name: categorie
          in: query
          description: Nom de la catégorie
          required: true
          schema:
            type: string 
        - name: utilisable
          in: query
          description: Si l'IA est déjà installé mettre true et le chemin de la virtualEnv dans le body sinon false et remplir au moins un champs install du body
          required: true
          schema:
            type: boolean 
            default: false
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet' # mettre install_path_WIN cheminVirtualEnv chemin utilisation
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /ia/trouverParCategorie:
    get:
      tags:
        - IA
      summary: Trouve une IA pour répondre à un besoin
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: Categorie
          in: query
          description: Status values that need to be considered for filter
          required: true
          schema:
            type: string
            default: txt2img;img2img
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
          
  /modele/{nomIA}:
    post:
      tags:
        - Modèle
      summary: Ajoute un nouveau modèle d'IA
      description: Add a new pet to the store
      operationId: addModele
      parameters:
        - name: nomIA
          in: path
          description: Nom de l'IA retourné par /IA/trouverParCategorie
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - Modèle
      summary: Donne les modèles de l'IA
      description: Add a new pet to the store
      operationId: getModele
      parameters:
        - name: nomIA
          in: path
          description: Nom de l'IA retourné par /IA/trouverParCategorie
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /modele/{nomIA}/{modeleIA}:
    delete:
      tags:
        - Modèle
      summary: Supprime un modèle de l'IA
      description: Les noms des IA sont disponible via la méthode GET /IA/trouverParCategorie. Les noms des modèles d'IA sont disponible via la méthode GET /modele/{nomIA}
      operationId: delModele
      parameters:
        - name: nomIA
          in: path
          description: Nom de l'IA 
          required: true
          schema:
            type: string
        - name: modeleIA
          in: path
          description: Modèle de l'IA à supprimer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid input
        '422':
          description: Validation exception


  /ia/txt2txt/{nomIA}/{modeleIA}:
    post:
      tags:
        - Génération
      summary: Génère du texte à partir de texte
      description: Génère du texte à partir de texte
      operationId: addTxtFromTxt
      parameters:
        - name: nomIA
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: string
        - name: modeleIA
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: string
      requestBody:
        description: Génération d'une nouvelle Image
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Img'
          application/xml:
            schema:
              $ref: '#/components/schemas/Img'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Img'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Img'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Img'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
          
  /ia/txt2img/{nomIA}/{modeleIA}:
    post:
      tags:
        - Génération
      summary: Convertit du texte en image
      description: Crée une ou plusieurs images
      operationId: addImgFromTxt
      parameters:
        - name: nomIA
          in: path
          description: Nom de l'IA 
          required: true
          schema:
            type: string
        - name: modeleIA
          in: path
          description: Modèle de l'IA à supprimer
          required: true
          schema:
            type: string
      requestBody:
        description: Génération d'une nouvelle Image
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Img'
          application/xml:
            schema:
              $ref: '#/components/schemas/Img'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Img'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Img'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Img'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
          
  /ia/img2txt/{nomIA}/{modeleIA}:
    post:
      tags:
        - Génération
      summary: Convertit du texte en image
      description: Crée une ou plusieurs images
      operationId: addTxtFromImg
      parameters:
        - name: nomIA
          in: path
          description: Nom de l'IA 
          required: true
          schema:
            type: string
        - name: modeleIA
          in: path
          description: Modèle de l'IA à supprimer
          required: true
          schema:
            type: string
      requestBody:
        description: Génération d'une nouvelle Image
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Img'
          application/xml:
            schema:
              $ref: '#/components/schemas/Img'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Img'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Img'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Img'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
            
  /IA/img2img/{nomIA}/{modeleIA}:
    post:
      tags:
        - Génération
      summary: Convertit du texte en image
      description: Crée une ou plusieurs images
      operationId: addImgFromImg
      parameters:
        - name: nomIA
          in: path
          description: Nom de l'IA 
          required: true
          schema:
            type: string
        - name: modeleIA
          in: path
          description: Modèle de l'IA à supprimer
          required: true
          schema:
            type: string
      requestBody:
        description: Génération d'une nouvelle Image
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Img'
          application/xml:
            schema:
              $ref: '#/components/schemas/Img'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Img'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Img'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Img'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
            
components:
  schemas:
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Pet'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Pet'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    Img:
      type: object
      properties:
        base64:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'